<?php
//
/**
 * Implements hook_menu().
 */
function mp_service_menu() {
  $items['mp_service'] = array(
    'title' => 'valid&response',
    'page callback' => 'mp_service_response',
    'access callback' => TRUE,
  );
  $items['admin/config/mp_service'] = array(
    'title' => 'mp_service settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mp_service_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'mp_service.admin.inc',
  );
  return $items;
}
function mp_service_response() {
	module_load_include('inc', 'mp_service', 'mp_service');
  $options = array(
    'token'=> variable_get('mp_service_token', 'ybzx'),//填写你设定的key
  );
	$wechatObj = new Wechat($options);
	// $wechatObj->valid(); //注意, 应用验证通过后,可将此句注释掉, 但会降低网站安全性
  $type = $wechatObj->getRev()->getRevType();
watchdog('mp_service-type', $type, array(), WATCHDOG_NOTICE, 'link');
  switch($type) {
    case Wechat::MSGTYPE_TEXT:
            $wechatObj->text("hello, I'm wechat")->reply();
            exit;
            break;
    case Wechat::MSGTYPE_EVENT:
            break;
    case Wechat::MSGTYPE_IMAGE:
            break;
    default:
            $wechatObj->text("help info")->reply();
  }
  return;

	//preg to get key_words
	$postStr = $GLOBALS["HTTP_RAW_POST_DATA"];
      	//extract post data
	if (!empty($postStr)) {
		$postObj = simplexml_load_string($postStr, 'SimpleXMLElement', LIBXML_NOCDATA);
	  watchdog('mp-postObj', print_r($postObj,true), array(), WATCHDOG_NOTICE, 'link');
	  //focus::SimpleXMLElement Object ( [ToUserName] => gh_e7d44148423c [FromUserName] => oNAD2jlAk0ZGHkgezd_MnQbGrBPM [CreateTime] => 1372159280 [MsgType] => event [Event] => subscribe [EventKey] => SimpleXMLElement Object ( ) )
	  //receive::SimpleXMLElement Object ( [ToUserName] => gh_e7d44148423c [FromUserName] => oNAD2jlAk0ZGHkgezd_MnQbGrBPM [CreateTime] => 1372158829 [MsgType] => text [Content] => 看来 [MsgId] => 5893377295572656705 )
	  $fromUsername = $postObj->FromUserName;
	  $toUsername = $postObj->ToUserName;
	  $keyword = trim($postObj->Content);
	  $time = time();
	  switch ($postObj->MsgType) {
	      case 'text':
	          $field_mp_type = 1;
	          break;
	      
	      default:
	          $field_mp_type = 2;
	          break;
	  }
	  $textTpl = "<xml>
			<ToUserName><![CDATA[%s]]></ToUserName>
			<FromUserName><![CDATA[%s]]></FromUserName>
			<CreateTime>%s</CreateTime>
			<MsgType><![CDATA[%s]]></MsgType>
			<Content><![CDATA[%s]]></Content>
			<FuncFlag>0</FuncFlag>
			</xml>";

		//subscribe begin
		if($postObj->MsgType == 'event' && $postObj->Event == 'subscribe') {
			$contentStr = "欢迎关注[Smile],我们将不定期发送永不止息最新动态给您~\n通过微信玩转永不止息？【回复00进入主菜单】\n所有功能测试开发中～敬请期待！";
			$msgType = "text";
			$resultStr = sprintf($textTpl, $fromUsername, $toUsername, $time, $msgType, $contentStr);
    	if(!mp_get_uid_by_FromUserName($fromUsername)) {
    		//record the user in db
    	}
			echo $resultStr;
      exit;
		}
		//subscribe end
		//
		if(!empty( $keyword )) {
  		$msgType = "text";
    	switch ($keyword) {
    		case '00':
    			$contentStr = "【1】玩法介绍\n【2】发布相片/心情\n【3】查看最近活跃的弟兄姊妹\n测试开发中～敬请期待！";
    			break;
    		case '1':
    			$contentStr ="如果您在永不止息注册过，请回复9绑定后更多玩法。通过微信玩转永不止息？\n【1】玩法介绍\n【2】发布相片/心情\n【3】查看最近活跃的弟兄姊妹【回复00进入主菜单】\n 测试开发中～敬请期待！";
    			break;
    		case '2':
    			$contentStr = "【20】发布照片\n【21】想对你说(写给喜欢的人)\n【22】无主情话(随便说点情话)\n【23】时光隧道(分享我的过去)\n【24】独居生活(记录现在的生活)\n【回复00进入主菜单】\n 测试开发中～敬请期待！";
    			break;
    		case '3':
    			$contentStr =  "【3】查看最近活跃的弟兄姊妹有：【回复00进入主菜单】\n 测试开发中～敬请期待！";
    			break;
    		default:
    				$contentStr = t('Thanks for your focus~,we will do our best for you!')."\n 测试开发中～敬请期待！";
    			break;
    	}
    	$resultStr = sprintf($textTpl, $fromUsername, $toUsername, $time, $msgType, $contentStr);
        //生成本站订单begin

        // $node = new stdClass();
        // $node->title = $postObj->MsgId;
        // $node->type = 'mp_receive';
        // node_object_prepare($node); // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().
        // $node->language = LANGUAGE_NONE; // Or e.g. 'en' if locale is enabled
        // //todo:
        // //bind user
        // //mp_respone
        // //get_uid_by_FormUserName('oNAD2jlAk0ZGHkgezd_MnQbGrBPM');
        // $node->uid = 1;
        // $node->status = 1; //(1 or 0): published or not
        // $node->promote = 0; //(1 or 0): promoted to front page
        // $node->comment = 0; // 0 = comments disabled, 1 = read only, 2 = read/write
        // $node->path['pathauto'] = false;
        // $node->body[$node->language][0]['value']   = $postObj->Content . print_r($postObj,true);
        // $node->body[$node->language][0]['summary'] = text_summary($postObj->Content);
        // $node->body[$node->language][0]['format']  = 'filtered_html';

        // $node->field_mp_type['und'][0]['value'] = $field_mp_type;
        // $node->field_mp_fromusername['und'][0]['value'] = $postObj->FromUserName;
        // if($node = node_submit($node)) { // Prepare node for saving
        //     node_save($node);
        //     watchdog('mp-add mp-receive node', "Node with nid " . $node->nid . " saved!\n", array(), WATCHDOG_NOTICE, 'link');
        // }
        echo $resultStr;
        exit;

    }else{
    	echo "Input something...";
      exit;
    }

	  }else {
	  	echo "";
	  	exit;
	  }

}


function mp_get_uid_by_FromUserName($FromUserName){
	$uid = db_query('SELECT uid FROM {mp_service} WHERE fromusername = :fromusername', array(':fromusername' => $FromUserName))->fetchField();
	if($uid === FALSE) {
		$result = db_insert('mp_service')
			->fields(array(
			  'uid' => 0,
			  'fromusername' => $FromUserName,
			  'created' => REQUEST_TIME,
			))
			->execute();
		return 0;
	}
	return $uid;
}